name: ASA Notarization Test

trigger:
  batch: true
  paths:
    include:
    - Asa
    - Lib
  branches:
    include:
    - release/v2.1

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Mac
    pool:
        vmImage: 'macOS-latest'
    steps:
    - script: 'dotnet tool install -g nbgv'
      displayName: 'Install GitVersioning'
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '3.1.100'

    - task: DotNetCoreCLI@2
      displayName: 'Publish ASA macOS'
      inputs:
          command: publish
          projects: 'Asa/Asa.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.binariesdirectory)/macos -r osx-x64'
          zipAfterPublish: false
    - task: CmdLine@2
      inputs:
        script: |
          VERSION="$(nbgv get-version -v AssemblyInformationalVersion | cut -d'+' -f 1)"

          mkdir $BIN_DIR/Asa-macos-$VERSION
          mv $BIN_DIR/macos/Asa $BIN_DIR/Asa-macos-$VERSION/res/

          cp $SRC_DIR/Asa/AsaLaunch.sh $BIN_DIR/Asa-macos-$VERSION/AsaLaunch.sh
          cp $SRC_DIR/Asa/AsaLaunchGui.sh $BIN_DIR/Asa-macos-$VERSION/AsaLaunchGui.sh

          chmod +x $BIN_DIR/Asa-macos-$VERSION/AsaLaunch.sh
          chmod +x $BIN_DIR/Asa-macos-$VERSION/AsaLaunchGui.sh
          chmod +x $BIN_DIR/Asa-macos-$VERSION/res/Asa

          cd $BIN_DIR
          tar -czvf $ART_DIR/Asa-macos-$VERSION.tar.gz Asa-macos-$VERSION

          sha256sum $ART_DIR/Asa-macos-$VERSION.tar.gz | awk ' { n=split($2, a, "/"); $2 = a[n]; print; } ' OFS='\t' >> $BIN_DIR/HASHES_MAC.txt
      displayName: 'Prepare Artifacts'
      env:
        BIN_DIR: $(build.binariesdirectory)
        ART_DIR: $(build.artifactstagingdirectory)
        SRC_DIR: $(build.sourcesdirectory)

    - task: PublishBuildArtifacts@1
      displayName: 'Publish HASHES'
      inputs:
        PathtoPublish: '$(build.binariesdirectory)/HASHES_MAC.txt'
        ArtifactName: 'HASHES'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Build Artifacts'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)/'
        ArtifactName: 'BINARIES'